import Head from 'next/head';
import { ArticleList } from '@/pages/components/ArticleList';
import { Header } from '@/pages/components/Header';
import { Article, Language } from '@/types';
import { getRandomArticleInfo } from '@/utils';
import { useRouter } from 'next/router';
import { GetServerSidePropsContext } from 'next';
import languages from '../languages.json';

type HomeProps = {
  articles: Article[];
  languages: Language[];
};

async function getWikipediaLanguages(): Promise<Language[]> {
  const url = 'https://www.wikidata.org/w/api.php?';
  const requestParams = {
    action: 'query',
    format: 'json',
    formatversion: '2',
    meta: 'wbcontentlanguages',
    wbclcontext: 'monolingualtext',
    wbclprop: 'code|name',
  };
  const params = new URLSearchParams(requestParams).toString();
  const data = await fetch(url + params).then((data) => data.json());

  return Object.values(data.query.wbcontentlanguages);
}
export async function getServerSideProps(context: GetServerSidePropsContext) {
  const languageCodes = languages.map((language) => language.Wiki);

  if (!languageCodes.includes(String(context.query.language))) {
    return {
      redirect: {
        destination: '/',
        permanent: false,
      },
    };
  }

  return {
    props: {
      articles: await getRandomArticleInfo(context.query.language as string),
      languages: await getWikipediaLanguages(),
    },
  };
}

export default function RandomArticles({ articles }: HomeProps) {
  const { query } = useRouter();

  return (
    <>
      <Head>
        <title>Wikipedia Infinite Scroll</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <ArticleList articles={articles} language={String(query.language)} />
    </>
  );
}
